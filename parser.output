Estado 17 conflictos: 1 desplazamiento/reducción
Estado 22 conflictos: 12 desplazamiento/reducción
Estado 64 conflictos: 12 desplazamiento/reducción


Gramática

    0 $accept: program $end

    1 program: program control block
    2        | block

    3 block: statement_list
    4      | TOKEN_INDENT statement_list TOKEN_DEDENT

    5 statement_list: statement_list TOKEN_LINEBREAK statement
    6               | statement_list TOKEN_LINEBREAK
    7               | statement
    8               | control block

    9 control: TOKEN_LINEBREAK control
   10        | TOKEN_IF expression TOKEN_COLON
   11        | TOKEN_ELSE TOKEN_COLON
   12        | TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN expression TOKEN_COLON
   13        | TOKEN_WHILE expression TOKEN_COLON

   14 parameters: parameters TOKEN_COMMA parameter
   15           | parameter

   16 parameter: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE
   17          | TOKEN_IDENTIFIER

   18 arguments: arguments TOKEN_COMMA expression
   19          | expression

   20 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN expression
   21          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE
   22          | TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   23          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block
   24          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block
   25          | TOKEN_RETURN expression
   26          | TOKEN_BREAK
   27          | TOKEN_RETURN
   28          | expression

   29 expression: TOKEN_NUMBER
   30           | TOKEN_STRING
   31           | TOKEN_IDENTIFIER
   32           | expression operator expression
   33           | TOKEN_IDENTIFIER TOKEN_LPAREN arguments TOKEN_RPAREN
   34           | TOKEN_NOT expression
   35           | TOKEN_LPAREN expression TOKEN_RPAREN

   36 operator: TOKEN_COMPARE
   37         | TOKEN_DIFFERENT
   38         | TOKEN_LESS
   39         | TOKEN_GREATER
   40         | TOKEN_LESS_EQUAL
   41         | TOKEN_GREATER_EQUAL
   42         | TOKEN_AND
   43         | TOKEN_OR
   44         | TOKEN_PLUS
   45         | TOKEN_MINUS
   46         | TOKEN_MULTIPLY
   47         | TOKEN_DIVIDE


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    TOKEN_STRING (258) 30
    TOKEN_NOT (259) 34
    TOKEN_AND (260) 42
    TOKEN_OR (261) 43
    TOKEN_BREAK (262) 26
    TOKEN_IN (263) 12
    TOKEN_ASSIGN (264) 20 22
    TOKEN_IDENTIFIER (265) 12 16 17 20 21 22 23 24 31 33
    TOKEN_LPAREN (266) 23 24 33 35
    TOKEN_RPAREN (267) 23 24 33 35
    TOKEN_ARROW (268) 24
    TOKEN_COMPARE (269) 36
    TOKEN_DIFFERENT (270) 37
    TOKEN_IF (271) 10
    TOKEN_ELSE (272) 11
    TOKEN_FOR (273) 12
    TOKEN_WHILE (274) 13
    TOKEN_FUNC_DEF (275) 23 24
    TOKEN_RETURN (276) 25 27
    TOKEN_GREATER (277) 39
    TOKEN_LESS (278) 38
    TOKEN_LESS_EQUAL (279) 40
    TOKEN_GREATER_EQUAL (280) 41
    TOKEN_COMMA (281) 14 18
    TOKEN_LINEBREAK (282) 5 6 9
    TOKEN_PLUS (283) 44
    TOKEN_MINUS (284) 45
    TOKEN_MULTIPLY (285) 46
    TOKEN_INDENT (286) 4
    TOKEN_DEDENT (287) 4
    TOKEN_DIVIDE (288) 47
    TOKEN_NUMBER (289) 29
    TOKEN_COLON (290) 10 11 12 13 16 20 21 23 24
    TOKEN_TYPE (291) 16 20 21 24


No terminales con las reglas donde aparecen

    $accept (37)
        on left: 0
    program (38)
        on left: 1 2
        on right: 0 1
    block (39)
        on left: 3 4
        on right: 1 2 8 23 24
    statement_list (40)
        on left: 5 6 7 8
        on right: 3 4 5 6
    control (41)
        on left: 9 10 11 12 13
        on right: 1 8 9
    parameters (42)
        on left: 14 15
        on right: 14 23 24
    parameter (43)
        on left: 16 17
        on right: 14 15
    arguments (44)
        on left: 18 19
        on right: 18 33
    statement (45)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 5 7
    expression (46)
        on left: 29 30 31 32 33 34 35
        on right: 10 12 13 18 19 20 22 25 28 32 34 35
    operator (47)
        on left: 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 32


Estado 0

    0 $accept: • program $end

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_BREAK       desplazar e ir al estado 3
    TOKEN_IDENTIFIER  desplazar e ir al estado 4
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_IF          desplazar e ir al estado 6
    TOKEN_ELSE        desplazar e ir al estado 7
    TOKEN_FOR         desplazar e ir al estado 8
    TOKEN_WHILE       desplazar e ir al estado 9
    TOKEN_FUNC_DEF    desplazar e ir al estado 10
    TOKEN_RETURN      desplazar e ir al estado 11
    TOKEN_LINEBREAK   desplazar e ir al estado 12
    TOKEN_INDENT      desplazar e ir al estado 13
    TOKEN_NUMBER      desplazar e ir al estado 14

    program         ir al estado 15
    block           ir al estado 16
    statement_list  ir al estado 17
    control         ir al estado 18
    statement       ir al estado 19
    expression      ir al estado 20


Estado 1

   30 expression: TOKEN_STRING •

    $default  reduce usando la regla 30 (expression)


Estado 2

   34 expression: TOKEN_NOT • expression

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 22


Estado 3

   26 statement: TOKEN_BREAK •

    $default  reduce usando la regla 26 (statement)


Estado 4

   20 statement: TOKEN_IDENTIFIER • TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN expression
   21          | TOKEN_IDENTIFIER • TOKEN_COLON TOKEN_TYPE
   22          | TOKEN_IDENTIFIER • TOKEN_ASSIGN expression
   31 expression: TOKEN_IDENTIFIER •
   33           | TOKEN_IDENTIFIER • TOKEN_LPAREN arguments TOKEN_RPAREN

    TOKEN_ASSIGN  desplazar e ir al estado 23
    TOKEN_LPAREN  desplazar e ir al estado 24
    TOKEN_COLON   desplazar e ir al estado 25

    $default  reduce usando la regla 31 (expression)


Estado 5

   35 expression: TOKEN_LPAREN • expression TOKEN_RPAREN

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 26


Estado 6

   10 control: TOKEN_IF • expression TOKEN_COLON

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 27


Estado 7

   11 control: TOKEN_ELSE • TOKEN_COLON

    TOKEN_COLON  desplazar e ir al estado 28


Estado 8

   12 control: TOKEN_FOR • TOKEN_IDENTIFIER TOKEN_IN expression TOKEN_COLON

    TOKEN_IDENTIFIER  desplazar e ir al estado 29


Estado 9

   13 control: TOKEN_WHILE • expression TOKEN_COLON

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 30


Estado 10

   23 statement: TOKEN_FUNC_DEF • TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block
   24          | TOKEN_FUNC_DEF • TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_IDENTIFIER  desplazar e ir al estado 31


Estado 11

   25 statement: TOKEN_RETURN • expression
   27          | TOKEN_RETURN •

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    $default  reduce usando la regla 27 (statement)

    expression  ir al estado 32


Estado 12

    9 control: TOKEN_LINEBREAK • control

    TOKEN_IF         desplazar e ir al estado 6
    TOKEN_ELSE       desplazar e ir al estado 7
    TOKEN_FOR        desplazar e ir al estado 8
    TOKEN_WHILE      desplazar e ir al estado 9
    TOKEN_LINEBREAK  desplazar e ir al estado 12

    control  ir al estado 33


Estado 13

    4 block: TOKEN_INDENT • statement_list TOKEN_DEDENT

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_BREAK       desplazar e ir al estado 3
    TOKEN_IDENTIFIER  desplazar e ir al estado 4
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_IF          desplazar e ir al estado 6
    TOKEN_ELSE        desplazar e ir al estado 7
    TOKEN_FOR         desplazar e ir al estado 8
    TOKEN_WHILE       desplazar e ir al estado 9
    TOKEN_FUNC_DEF    desplazar e ir al estado 10
    TOKEN_RETURN      desplazar e ir al estado 11
    TOKEN_LINEBREAK   desplazar e ir al estado 12
    TOKEN_NUMBER      desplazar e ir al estado 14

    statement_list  ir al estado 34
    control         ir al estado 18
    statement       ir al estado 19
    expression      ir al estado 20


Estado 14

   29 expression: TOKEN_NUMBER •

    $default  reduce usando la regla 29 (expression)


Estado 15

    0 $accept: program • $end
    1 program: program • control block

    $end             desplazar e ir al estado 35
    TOKEN_IF         desplazar e ir al estado 6
    TOKEN_ELSE       desplazar e ir al estado 7
    TOKEN_FOR        desplazar e ir al estado 8
    TOKEN_WHILE      desplazar e ir al estado 9
    TOKEN_LINEBREAK  desplazar e ir al estado 12

    control  ir al estado 36


Estado 16

    2 program: block •

    $default  reduce usando la regla 2 (program)


Estado 17

    3 block: statement_list •
    5 statement_list: statement_list • TOKEN_LINEBREAK statement
    6               | statement_list • TOKEN_LINEBREAK

    TOKEN_LINEBREAK  desplazar e ir al estado 37

    TOKEN_LINEBREAK  [reduce usando la regla 3 (block)]
    $default         reduce usando la regla 3 (block)

    shift/reduce conflict on token TOKEN_LINEBREAK:
        3 block: statement_list •
        5 statement_list: statement_list • TOKEN_LINEBREAK statement
      First example: statement_list • TOKEN_LINEBREAK statement $end
      Shift derivation
        $accept
        ↳ 0: program                                                   $end
             ↳ 2: block
                  ↳ 3: statement_list
                       ↳ 5: statement_list • TOKEN_LINEBREAK statement
      Second example: statement_list • TOKEN_LINEBREAK control block $end
      Reduce derivation
        $accept
        ↳ 0: program                                                            $end
             ↳ 1: program                    control                      block
                  ↳ 2: block                 ↳ 9: TOKEN_LINEBREAK control
                       ↳ 3: statement_list •

    shift/reduce conflict on token TOKEN_LINEBREAK:
        3 block: statement_list •
        6 statement_list: statement_list • TOKEN_LINEBREAK
      First example: statement_list • TOKEN_LINEBREAK $end
      Shift derivation
        $accept
        ↳ 0: program                                         $end
             ↳ 2: block
                  ↳ 3: statement_list
                       ↳ 6: statement_list • TOKEN_LINEBREAK
      Second example: statement_list • TOKEN_LINEBREAK control block $end
      Reduce derivation
        $accept
        ↳ 0: program                                                            $end
             ↳ 1: program                    control                      block
                  ↳ 2: block                 ↳ 9: TOKEN_LINEBREAK control
                       ↳ 3: statement_list •



Estado 18

    8 statement_list: control • block

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_BREAK       desplazar e ir al estado 3
    TOKEN_IDENTIFIER  desplazar e ir al estado 4
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_IF          desplazar e ir al estado 6
    TOKEN_ELSE        desplazar e ir al estado 7
    TOKEN_FOR         desplazar e ir al estado 8
    TOKEN_WHILE       desplazar e ir al estado 9
    TOKEN_FUNC_DEF    desplazar e ir al estado 10
    TOKEN_RETURN      desplazar e ir al estado 11
    TOKEN_LINEBREAK   desplazar e ir al estado 12
    TOKEN_INDENT      desplazar e ir al estado 13
    TOKEN_NUMBER      desplazar e ir al estado 14

    block           ir al estado 38
    statement_list  ir al estado 17
    control         ir al estado 18
    statement       ir al estado 19
    expression      ir al estado 20


Estado 19

    7 statement_list: statement •

    $default  reduce usando la regla 7 (statement_list)


Estado 20

   28 statement: expression •
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    $default  reduce usando la regla 28 (statement)

    operator  ir al estado 51


Estado 21

   31 expression: TOKEN_IDENTIFIER •
   33           | TOKEN_IDENTIFIER • TOKEN_LPAREN arguments TOKEN_RPAREN

    TOKEN_LPAREN  desplazar e ir al estado 24

    $default  reduce usando la regla 31 (expression)


Estado 22

   32 expression: expression • operator expression
   34           | TOKEN_NOT expression •

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    TOKEN_AND            [reduce usando la regla 34 (expression)]
    TOKEN_OR             [reduce usando la regla 34 (expression)]
    TOKEN_COMPARE        [reduce usando la regla 34 (expression)]
    TOKEN_DIFFERENT      [reduce usando la regla 34 (expression)]
    TOKEN_GREATER        [reduce usando la regla 34 (expression)]
    TOKEN_LESS           [reduce usando la regla 34 (expression)]
    TOKEN_LESS_EQUAL     [reduce usando la regla 34 (expression)]
    TOKEN_GREATER_EQUAL  [reduce usando la regla 34 (expression)]
    TOKEN_PLUS           [reduce usando la regla 34 (expression)]
    TOKEN_MINUS          [reduce usando la regla 34 (expression)]
    TOKEN_MULTIPLY       [reduce usando la regla 34 (expression)]
    TOKEN_DIVIDE         [reduce usando la regla 34 (expression)]
    $default             reduce usando la regla 34 (expression)

    operator  ir al estado 51

    shift/reduce conflict on token TOKEN_COMPARE:
       34 expression: TOKEN_NOT expression •
       36 operator: • TOKEN_COMPARE
      Example: TOKEN_NOT expression • TOKEN_COMPARE expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator              expression
                                         ↳ 36: • TOKEN_COMPARE
      Reduce derivation
        expression
        ↳ 32: expression                   operator            expression
              ↳ 34: TOKEN_NOT expression • ↳ 36: TOKEN_COMPARE

    shift/reduce conflict on token TOKEN_DIFFERENT:
       34 expression: TOKEN_NOT expression •
       37 operator: • TOKEN_DIFFERENT
      Example: TOKEN_NOT expression • TOKEN_DIFFERENT expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator                expression
                                         ↳ 37: • TOKEN_DIFFERENT
      Reduce derivation
        expression
        ↳ 32: expression                   operator              expression
              ↳ 34: TOKEN_NOT expression • ↳ 37: TOKEN_DIFFERENT

    shift/reduce conflict on token TOKEN_LESS:
       34 expression: TOKEN_NOT expression •
       38 operator: • TOKEN_LESS
      Example: TOKEN_NOT expression • TOKEN_LESS expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator           expression
                                         ↳ 38: • TOKEN_LESS
      Reduce derivation
        expression
        ↳ 32: expression                   operator         expression
              ↳ 34: TOKEN_NOT expression • ↳ 38: TOKEN_LESS

    shift/reduce conflict on token TOKEN_GREATER:
       34 expression: TOKEN_NOT expression •
       39 operator: • TOKEN_GREATER
      Example: TOKEN_NOT expression • TOKEN_GREATER expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator              expression
                                         ↳ 39: • TOKEN_GREATER
      Reduce derivation
        expression
        ↳ 32: expression                   operator            expression
              ↳ 34: TOKEN_NOT expression • ↳ 39: TOKEN_GREATER

    shift/reduce conflict on token TOKEN_LESS_EQUAL:
       34 expression: TOKEN_NOT expression •
       40 operator: • TOKEN_LESS_EQUAL
      Example: TOKEN_NOT expression • TOKEN_LESS_EQUAL expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator                 expression
                                         ↳ 40: • TOKEN_LESS_EQUAL
      Reduce derivation
        expression
        ↳ 32: expression                   operator               expression
              ↳ 34: TOKEN_NOT expression • ↳ 40: TOKEN_LESS_EQUAL

    shift/reduce conflict on token TOKEN_GREATER_EQUAL:
       34 expression: TOKEN_NOT expression •
       41 operator: • TOKEN_GREATER_EQUAL
      Example: TOKEN_NOT expression • TOKEN_GREATER_EQUAL expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator                    expression
                                         ↳ 41: • TOKEN_GREATER_EQUAL
      Reduce derivation
        expression
        ↳ 32: expression                   operator                  expression
              ↳ 34: TOKEN_NOT expression • ↳ 41: TOKEN_GREATER_EQUAL

    shift/reduce conflict on token TOKEN_AND:
       34 expression: TOKEN_NOT expression •
       42 operator: • TOKEN_AND
      Example: TOKEN_NOT expression • TOKEN_AND expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator          expression
                                         ↳ 42: • TOKEN_AND
      Reduce derivation
        expression
        ↳ 32: expression                   operator        expression
              ↳ 34: TOKEN_NOT expression • ↳ 42: TOKEN_AND

    shift/reduce conflict on token TOKEN_OR:
       34 expression: TOKEN_NOT expression •
       43 operator: • TOKEN_OR
      Example: TOKEN_NOT expression • TOKEN_OR expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator         expression
                                         ↳ 43: • TOKEN_OR
      Reduce derivation
        expression
        ↳ 32: expression                   operator       expression
              ↳ 34: TOKEN_NOT expression • ↳ 43: TOKEN_OR

    shift/reduce conflict on token TOKEN_PLUS:
       34 expression: TOKEN_NOT expression •
       44 operator: • TOKEN_PLUS
      Example: TOKEN_NOT expression • TOKEN_PLUS expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator           expression
                                         ↳ 44: • TOKEN_PLUS
      Reduce derivation
        expression
        ↳ 32: expression                   operator         expression
              ↳ 34: TOKEN_NOT expression • ↳ 44: TOKEN_PLUS

    shift/reduce conflict on token TOKEN_MINUS:
       34 expression: TOKEN_NOT expression •
       45 operator: • TOKEN_MINUS
      Example: TOKEN_NOT expression • TOKEN_MINUS expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator            expression
                                         ↳ 45: • TOKEN_MINUS
      Reduce derivation
        expression
        ↳ 32: expression                   operator          expression
              ↳ 34: TOKEN_NOT expression • ↳ 45: TOKEN_MINUS

    shift/reduce conflict on token TOKEN_MULTIPLY:
       34 expression: TOKEN_NOT expression •
       46 operator: • TOKEN_MULTIPLY
      Example: TOKEN_NOT expression • TOKEN_MULTIPLY expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator               expression
                                         ↳ 46: • TOKEN_MULTIPLY
      Reduce derivation
        expression
        ↳ 32: expression                   operator             expression
              ↳ 34: TOKEN_NOT expression • ↳ 46: TOKEN_MULTIPLY

    shift/reduce conflict on token TOKEN_DIVIDE:
       34 expression: TOKEN_NOT expression •
       47 operator: • TOKEN_DIVIDE
      Example: TOKEN_NOT expression • TOKEN_DIVIDE expression
      Shift derivation
        expression
        ↳ 34: TOKEN_NOT expression
                        ↳ 32: expression operator             expression
                                         ↳ 47: • TOKEN_DIVIDE
      Reduce derivation
        expression
        ↳ 32: expression                   operator           expression
              ↳ 34: TOKEN_NOT expression • ↳ 47: TOKEN_DIVIDE



Estado 23

   22 statement: TOKEN_IDENTIFIER TOKEN_ASSIGN • expression

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 52


Estado 24

   33 expression: TOKEN_IDENTIFIER TOKEN_LPAREN • arguments TOKEN_RPAREN

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    arguments   ir al estado 53
    expression  ir al estado 54


Estado 25

   20 statement: TOKEN_IDENTIFIER TOKEN_COLON • TOKEN_TYPE TOKEN_ASSIGN expression
   21          | TOKEN_IDENTIFIER TOKEN_COLON • TOKEN_TYPE

    TOKEN_TYPE  desplazar e ir al estado 55


Estado 26

   32 expression: expression • operator expression
   35           | TOKEN_LPAREN expression • TOKEN_RPAREN

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_RPAREN         desplazar e ir al estado 56
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    operator  ir al estado 51


Estado 27

   10 control: TOKEN_IF expression • TOKEN_COLON
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50
    TOKEN_COLON          desplazar e ir al estado 57

    operator  ir al estado 51


Estado 28

   11 control: TOKEN_ELSE TOKEN_COLON •

    $default  reduce usando la regla 11 (control)


Estado 29

   12 control: TOKEN_FOR TOKEN_IDENTIFIER • TOKEN_IN expression TOKEN_COLON

    TOKEN_IN  desplazar e ir al estado 58


Estado 30

   13 control: TOKEN_WHILE expression • TOKEN_COLON
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50
    TOKEN_COLON          desplazar e ir al estado 59

    operator  ir al estado 51


Estado 31

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER • TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block
   24          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER • TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_LPAREN  desplazar e ir al estado 60


Estado 32

   25 statement: TOKEN_RETURN expression •
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    $default  reduce usando la regla 25 (statement)

    operator  ir al estado 51


Estado 33

    9 control: TOKEN_LINEBREAK control •

    $default  reduce usando la regla 9 (control)


Estado 34

    4 block: TOKEN_INDENT statement_list • TOKEN_DEDENT
    5 statement_list: statement_list • TOKEN_LINEBREAK statement
    6               | statement_list • TOKEN_LINEBREAK

    TOKEN_LINEBREAK  desplazar e ir al estado 37
    TOKEN_DEDENT     desplazar e ir al estado 61


Estado 35

    0 $accept: program $end •

    $default  aceptar


Estado 36

    1 program: program control • block

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_BREAK       desplazar e ir al estado 3
    TOKEN_IDENTIFIER  desplazar e ir al estado 4
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_IF          desplazar e ir al estado 6
    TOKEN_ELSE        desplazar e ir al estado 7
    TOKEN_FOR         desplazar e ir al estado 8
    TOKEN_WHILE       desplazar e ir al estado 9
    TOKEN_FUNC_DEF    desplazar e ir al estado 10
    TOKEN_RETURN      desplazar e ir al estado 11
    TOKEN_LINEBREAK   desplazar e ir al estado 12
    TOKEN_INDENT      desplazar e ir al estado 13
    TOKEN_NUMBER      desplazar e ir al estado 14

    block           ir al estado 62
    statement_list  ir al estado 17
    control         ir al estado 18
    statement       ir al estado 19
    expression      ir al estado 20


Estado 37

    5 statement_list: statement_list TOKEN_LINEBREAK • statement
    6               | statement_list TOKEN_LINEBREAK •

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_BREAK       desplazar e ir al estado 3
    TOKEN_IDENTIFIER  desplazar e ir al estado 4
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_FUNC_DEF    desplazar e ir al estado 10
    TOKEN_RETURN      desplazar e ir al estado 11
    TOKEN_NUMBER      desplazar e ir al estado 14

    $default  reduce usando la regla 6 (statement_list)

    statement   ir al estado 63
    expression  ir al estado 20


Estado 38

    8 statement_list: control block •

    $default  reduce usando la regla 8 (statement_list)


Estado 39

   42 operator: TOKEN_AND •

    $default  reduce usando la regla 42 (operator)


Estado 40

   43 operator: TOKEN_OR •

    $default  reduce usando la regla 43 (operator)


Estado 41

   36 operator: TOKEN_COMPARE •

    $default  reduce usando la regla 36 (operator)


Estado 42

   37 operator: TOKEN_DIFFERENT •

    $default  reduce usando la regla 37 (operator)


Estado 43

   39 operator: TOKEN_GREATER •

    $default  reduce usando la regla 39 (operator)


Estado 44

   38 operator: TOKEN_LESS •

    $default  reduce usando la regla 38 (operator)


Estado 45

   40 operator: TOKEN_LESS_EQUAL •

    $default  reduce usando la regla 40 (operator)


Estado 46

   41 operator: TOKEN_GREATER_EQUAL •

    $default  reduce usando la regla 41 (operator)


Estado 47

   44 operator: TOKEN_PLUS •

    $default  reduce usando la regla 44 (operator)


Estado 48

   45 operator: TOKEN_MINUS •

    $default  reduce usando la regla 45 (operator)


Estado 49

   46 operator: TOKEN_MULTIPLY •

    $default  reduce usando la regla 46 (operator)


Estado 50

   47 operator: TOKEN_DIVIDE •

    $default  reduce usando la regla 47 (operator)


Estado 51

   32 expression: expression operator • expression

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 64


Estado 52

   22 statement: TOKEN_IDENTIFIER TOKEN_ASSIGN expression •
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    $default  reduce usando la regla 22 (statement)

    operator  ir al estado 51


Estado 53

   18 arguments: arguments • TOKEN_COMMA expression
   33 expression: TOKEN_IDENTIFIER TOKEN_LPAREN arguments • TOKEN_RPAREN

    TOKEN_RPAREN  desplazar e ir al estado 65
    TOKEN_COMMA   desplazar e ir al estado 66


Estado 54

   19 arguments: expression •
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    $default  reduce usando la regla 19 (arguments)

    operator  ir al estado 51


Estado 55

   20 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE • TOKEN_ASSIGN expression
   21          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE •

    TOKEN_ASSIGN  desplazar e ir al estado 67

    $default  reduce usando la regla 21 (statement)


Estado 56

   35 expression: TOKEN_LPAREN expression TOKEN_RPAREN •

    $default  reduce usando la regla 35 (expression)


Estado 57

   10 control: TOKEN_IF expression TOKEN_COLON •

    $default  reduce usando la regla 10 (control)


Estado 58

   12 control: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN • expression TOKEN_COLON

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 68


Estado 59

   13 control: TOKEN_WHILE expression TOKEN_COLON •

    $default  reduce usando la regla 13 (control)


Estado 60

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN • parameters TOKEN_RPAREN TOKEN_COLON block
   24          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN • parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_IDENTIFIER  desplazar e ir al estado 69

    parameters  ir al estado 70
    parameter   ir al estado 71


Estado 61

    4 block: TOKEN_INDENT statement_list TOKEN_DEDENT •

    $default  reduce usando la regla 4 (block)


Estado 62

    1 program: program control block •

    $default  reduce usando la regla 1 (program)


Estado 63

    5 statement_list: statement_list TOKEN_LINEBREAK statement •

    $default  reduce usando la regla 5 (statement_list)


Estado 64

   32 expression: expression • operator expression
   32           | expression operator expression •

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    TOKEN_AND            [reduce usando la regla 32 (expression)]
    TOKEN_OR             [reduce usando la regla 32 (expression)]
    TOKEN_COMPARE        [reduce usando la regla 32 (expression)]
    TOKEN_DIFFERENT      [reduce usando la regla 32 (expression)]
    TOKEN_GREATER        [reduce usando la regla 32 (expression)]
    TOKEN_LESS           [reduce usando la regla 32 (expression)]
    TOKEN_LESS_EQUAL     [reduce usando la regla 32 (expression)]
    TOKEN_GREATER_EQUAL  [reduce usando la regla 32 (expression)]
    TOKEN_PLUS           [reduce usando la regla 32 (expression)]
    TOKEN_MINUS          [reduce usando la regla 32 (expression)]
    TOKEN_MULTIPLY       [reduce usando la regla 32 (expression)]
    TOKEN_DIVIDE         [reduce usando la regla 32 (expression)]
    $default             reduce usando la regla 32 (expression)

    operator  ir al estado 51

    shift/reduce conflict on token TOKEN_COMPARE:
       32 expression: expression operator expression •
       36 operator: • TOKEN_COMPARE
      Example: expression operator expression • TOKEN_COMPARE expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator              expression
                                                   ↳ 36: • TOKEN_COMPARE
      Reduce derivation
        expression
        ↳ 32: expression                             operator            expression
              ↳ 32: expression operator expression • ↳ 36: TOKEN_COMPARE

    shift/reduce conflict on token TOKEN_DIFFERENT:
       32 expression: expression operator expression •
       37 operator: • TOKEN_DIFFERENT
      Example: expression operator expression • TOKEN_DIFFERENT expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator                expression
                                                   ↳ 37: • TOKEN_DIFFERENT
      Reduce derivation
        expression
        ↳ 32: expression                             operator              expression
              ↳ 32: expression operator expression • ↳ 37: TOKEN_DIFFERENT

    shift/reduce conflict on token TOKEN_LESS:
       32 expression: expression operator expression •
       38 operator: • TOKEN_LESS
      Example: expression operator expression • TOKEN_LESS expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator           expression
                                                   ↳ 38: • TOKEN_LESS
      Reduce derivation
        expression
        ↳ 32: expression                             operator         expression
              ↳ 32: expression operator expression • ↳ 38: TOKEN_LESS

    shift/reduce conflict on token TOKEN_GREATER:
       32 expression: expression operator expression •
       39 operator: • TOKEN_GREATER
      Example: expression operator expression • TOKEN_GREATER expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator              expression
                                                   ↳ 39: • TOKEN_GREATER
      Reduce derivation
        expression
        ↳ 32: expression                             operator            expression
              ↳ 32: expression operator expression • ↳ 39: TOKEN_GREATER

    shift/reduce conflict on token TOKEN_LESS_EQUAL:
       32 expression: expression operator expression •
       40 operator: • TOKEN_LESS_EQUAL
      Example: expression operator expression • TOKEN_LESS_EQUAL expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator                 expression
                                                   ↳ 40: • TOKEN_LESS_EQUAL
      Reduce derivation
        expression
        ↳ 32: expression                             operator               expression
              ↳ 32: expression operator expression • ↳ 40: TOKEN_LESS_EQUAL

    shift/reduce conflict on token TOKEN_GREATER_EQUAL:
       32 expression: expression operator expression •
       41 operator: • TOKEN_GREATER_EQUAL
      Example: expression operator expression • TOKEN_GREATER_EQUAL expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator                    expression
                                                   ↳ 41: • TOKEN_GREATER_EQUAL
      Reduce derivation
        expression
        ↳ 32: expression                             operator                  expression
              ↳ 32: expression operator expression • ↳ 41: TOKEN_GREATER_EQUAL

    shift/reduce conflict on token TOKEN_AND:
       32 expression: expression operator expression •
       42 operator: • TOKEN_AND
      Example: expression operator expression • TOKEN_AND expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator          expression
                                                   ↳ 42: • TOKEN_AND
      Reduce derivation
        expression
        ↳ 32: expression                             operator        expression
              ↳ 32: expression operator expression • ↳ 42: TOKEN_AND

    shift/reduce conflict on token TOKEN_OR:
       32 expression: expression operator expression •
       43 operator: • TOKEN_OR
      Example: expression operator expression • TOKEN_OR expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator         expression
                                                   ↳ 43: • TOKEN_OR
      Reduce derivation
        expression
        ↳ 32: expression                             operator       expression
              ↳ 32: expression operator expression • ↳ 43: TOKEN_OR

    shift/reduce conflict on token TOKEN_PLUS:
       32 expression: expression operator expression •
       44 operator: • TOKEN_PLUS
      Example: expression operator expression • TOKEN_PLUS expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator           expression
                                                   ↳ 44: • TOKEN_PLUS
      Reduce derivation
        expression
        ↳ 32: expression                             operator         expression
              ↳ 32: expression operator expression • ↳ 44: TOKEN_PLUS

    shift/reduce conflict on token TOKEN_MINUS:
       32 expression: expression operator expression •
       45 operator: • TOKEN_MINUS
      Example: expression operator expression • TOKEN_MINUS expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator            expression
                                                   ↳ 45: • TOKEN_MINUS
      Reduce derivation
        expression
        ↳ 32: expression                             operator          expression
              ↳ 32: expression operator expression • ↳ 45: TOKEN_MINUS

    shift/reduce conflict on token TOKEN_MULTIPLY:
       32 expression: expression operator expression •
       46 operator: • TOKEN_MULTIPLY
      Example: expression operator expression • TOKEN_MULTIPLY expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator               expression
                                                   ↳ 46: • TOKEN_MULTIPLY
      Reduce derivation
        expression
        ↳ 32: expression                             operator             expression
              ↳ 32: expression operator expression • ↳ 46: TOKEN_MULTIPLY

    shift/reduce conflict on token TOKEN_DIVIDE:
       32 expression: expression operator expression •
       47 operator: • TOKEN_DIVIDE
      Example: expression operator expression • TOKEN_DIVIDE expression
      Shift derivation
        expression
        ↳ 32: expression operator expression
                                  ↳ 32: expression operator             expression
                                                   ↳ 47: • TOKEN_DIVIDE
      Reduce derivation
        expression
        ↳ 32: expression                             operator           expression
              ↳ 32: expression operator expression • ↳ 47: TOKEN_DIVIDE



Estado 65

   33 expression: TOKEN_IDENTIFIER TOKEN_LPAREN arguments TOKEN_RPAREN •

    $default  reduce usando la regla 33 (expression)


Estado 66

   18 arguments: arguments TOKEN_COMMA • expression

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 72


Estado 67

   20 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN • expression

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_IDENTIFIER  desplazar e ir al estado 21
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_NUMBER      desplazar e ir al estado 14

    expression  ir al estado 73


Estado 68

   12 control: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN expression • TOKEN_COLON
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50
    TOKEN_COLON          desplazar e ir al estado 74

    operator  ir al estado 51


Estado 69

   16 parameter: TOKEN_IDENTIFIER • TOKEN_COLON TOKEN_TYPE
   17          | TOKEN_IDENTIFIER •

    TOKEN_COLON  desplazar e ir al estado 75

    $default  reduce usando la regla 17 (parameter)


Estado 70

   14 parameters: parameters • TOKEN_COMMA parameter
   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters • TOKEN_RPAREN TOKEN_COLON block
   24          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters • TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_RPAREN  desplazar e ir al estado 76
    TOKEN_COMMA   desplazar e ir al estado 77


Estado 71

   15 parameters: parameter •

    $default  reduce usando la regla 15 (parameters)


Estado 72

   18 arguments: arguments TOKEN_COMMA expression •
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    $default  reduce usando la regla 18 (arguments)

    operator  ir al estado 51


Estado 73

   20 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN expression •
   32 expression: expression • operator expression

    TOKEN_AND            desplazar e ir al estado 39
    TOKEN_OR             desplazar e ir al estado 40
    TOKEN_COMPARE        desplazar e ir al estado 41
    TOKEN_DIFFERENT      desplazar e ir al estado 42
    TOKEN_GREATER        desplazar e ir al estado 43
    TOKEN_LESS           desplazar e ir al estado 44
    TOKEN_LESS_EQUAL     desplazar e ir al estado 45
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 46
    TOKEN_PLUS           desplazar e ir al estado 47
    TOKEN_MINUS          desplazar e ir al estado 48
    TOKEN_MULTIPLY       desplazar e ir al estado 49
    TOKEN_DIVIDE         desplazar e ir al estado 50

    $default  reduce usando la regla 20 (statement)

    operator  ir al estado 51


Estado 74

   12 control: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN expression TOKEN_COLON •

    $default  reduce usando la regla 12 (control)


Estado 75

   16 parameter: TOKEN_IDENTIFIER TOKEN_COLON • TOKEN_TYPE

    TOKEN_TYPE  desplazar e ir al estado 78


Estado 76

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN • TOKEN_COLON block
   24          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN • TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_ARROW  desplazar e ir al estado 79
    TOKEN_COLON  desplazar e ir al estado 80


Estado 77

   14 parameters: parameters TOKEN_COMMA • parameter

    TOKEN_IDENTIFIER  desplazar e ir al estado 69

    parameter  ir al estado 81


Estado 78

   16 parameter: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE •

    $default  reduce usando la regla 16 (parameter)


Estado 79

   24 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW • TOKEN_TYPE TOKEN_COLON block

    TOKEN_TYPE  desplazar e ir al estado 82


Estado 80

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON • block

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_BREAK       desplazar e ir al estado 3
    TOKEN_IDENTIFIER  desplazar e ir al estado 4
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_IF          desplazar e ir al estado 6
    TOKEN_ELSE        desplazar e ir al estado 7
    TOKEN_FOR         desplazar e ir al estado 8
    TOKEN_WHILE       desplazar e ir al estado 9
    TOKEN_FUNC_DEF    desplazar e ir al estado 10
    TOKEN_RETURN      desplazar e ir al estado 11
    TOKEN_LINEBREAK   desplazar e ir al estado 12
    TOKEN_INDENT      desplazar e ir al estado 13
    TOKEN_NUMBER      desplazar e ir al estado 14

    block           ir al estado 83
    statement_list  ir al estado 17
    control         ir al estado 18
    statement       ir al estado 19
    expression      ir al estado 20


Estado 81

   14 parameters: parameters TOKEN_COMMA parameter •

    $default  reduce usando la regla 14 (parameters)


Estado 82

   24 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE • TOKEN_COLON block

    TOKEN_COLON  desplazar e ir al estado 84


Estado 83

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block •

    $default  reduce usando la regla 23 (statement)


Estado 84

   24 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON • block

    TOKEN_STRING      desplazar e ir al estado 1
    TOKEN_NOT         desplazar e ir al estado 2
    TOKEN_BREAK       desplazar e ir al estado 3
    TOKEN_IDENTIFIER  desplazar e ir al estado 4
    TOKEN_LPAREN      desplazar e ir al estado 5
    TOKEN_IF          desplazar e ir al estado 6
    TOKEN_ELSE        desplazar e ir al estado 7
    TOKEN_FOR         desplazar e ir al estado 8
    TOKEN_WHILE       desplazar e ir al estado 9
    TOKEN_FUNC_DEF    desplazar e ir al estado 10
    TOKEN_RETURN      desplazar e ir al estado 11
    TOKEN_LINEBREAK   desplazar e ir al estado 12
    TOKEN_INDENT      desplazar e ir al estado 13
    TOKEN_NUMBER      desplazar e ir al estado 14

    block           ir al estado 85
    statement_list  ir al estado 17
    control         ir al estado 18
    statement       ir al estado 19
    expression      ir al estado 20


Estado 85

   24 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block •

    $default  reduce usando la regla 24 (statement)
