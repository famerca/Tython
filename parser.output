State 20 conflicts: 12 shift/reduce
State 31 conflicts: 1 shift/reduce
State 61 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 block: TOKEN_INDENT statement_list TOKEN_DEDENT

    3 statement_list: statement_list TOKEN_LINEBREAK statement
    4               | statement_list TOKEN_LINEBREAK control block
    5               | TOKEN_LINEBREAK statement_list
    6               | statement_list TOKEN_LINEBREAK
    7               | statement
    8               | control block

    9 control: TOKEN_IF expression TOKEN_COLON
   10        | TOKEN_ELSE TOKEN_COLON
   11        | TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN expression TOKEN_COLON
   12        | TOKEN_WHILE expression TOKEN_COLON

   13 parameters: parameters TOKEN_COMMA parameter
   14           | parameter

   15 parameter: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE
   16          | TOKEN_IDENTIFIER

   17 arguments: arguments TOKEN_COMMA expression
   18          | expression

   19 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN expression
   20          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE
   21          | TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   22          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block
   23          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block
   24          | TOKEN_RETURN expression
   25          | TOKEN_BREAK
   26          | TOKEN_RETURN
   27          | expression

   28 expression: TOKEN_NUMBER
   29           | TOKEN_STRING
   30           | TOKEN_IDENTIFIER
   31           | expression operator expression
   32           | TOKEN_IDENTIFIER TOKEN_LPAREN arguments TOKEN_RPAREN
   33           | TOKEN_NOT expression
   34           | TOKEN_LPAREN expression TOKEN_RPAREN

   35 operator: TOKEN_COMPARE
   36         | TOKEN_DIFFERENT
   37         | TOKEN_LESS
   38         | TOKEN_GREATER
   39         | TOKEN_LESS_EQUAL
   40         | TOKEN_GREATER_EQUAL
   41         | TOKEN_AND
   42         | TOKEN_OR
   43         | TOKEN_PLUS
   44         | TOKEN_MINUS
   45         | TOKEN_MULTIPLY
   46         | TOKEN_DIVIDE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_STRING (258) 29
    TOKEN_NOT (259) 33
    TOKEN_AND (260) 41
    TOKEN_OR (261) 42
    TOKEN_BREAK (262) 25
    TOKEN_IN (263) 11
    TOKEN_ASSIGN (264) 19 21
    TOKEN_IDENTIFIER (265) 11 15 16 19 20 21 22 23 30 32
    TOKEN_LPAREN (266) 22 23 32 34
    TOKEN_RPAREN (267) 22 23 32 34
    TOKEN_ARROW (268) 23
    TOKEN_COMPARE (269) 35
    TOKEN_DIFFERENT (270) 36
    TOKEN_IF (271) 9
    TOKEN_ELSE (272) 10
    TOKEN_FOR (273) 11
    TOKEN_WHILE (274) 12
    TOKEN_FUNC_DEF (275) 22 23
    TOKEN_RETURN (276) 24 26
    TOKEN_GREATER (277) 38
    TOKEN_LESS (278) 37
    TOKEN_LESS_EQUAL (279) 39
    TOKEN_GREATER_EQUAL (280) 40
    TOKEN_COMMA (281) 13 17
    TOKEN_LINEBREAK (282) 3 4 5 6
    TOKEN_PLUS (283) 43
    TOKEN_MINUS (284) 44
    TOKEN_MULTIPLY (285) 45
    TOKEN_INDENT (286) 2
    TOKEN_DEDENT (287) 2
    TOKEN_DIVIDE (288) 46
    TOKEN_NUMBER (289) 28
    TOKEN_COLON (290) 9 10 11 12 15 19 20 22 23
    TOKEN_TYPE (291) 15 19 20 23


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program (38)
        on left: 1
        on right: 0
    block (39)
        on left: 2
        on right: 4 8 22 23
    statement_list (40)
        on left: 3 4 5 6 7 8
        on right: 1 2 3 4 5 6
    control (41)
        on left: 9 10 11 12
        on right: 4 8
    parameters (42)
        on left: 13 14
        on right: 13 22 23
    parameter (43)
        on left: 15 16
        on right: 13 14
    arguments (44)
        on left: 17 18
        on right: 17 32
    statement (45)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 3 7
    expression (46)
        on left: 28 29 30 31 32 33 34
        on right: 9 11 12 17 18 19 21 24 27 31 33 34
    operator (47)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 31


State 0

    0 $accept: • program $end

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_BREAK       shift, and go to state 3
    TOKEN_IDENTIFIER  shift, and go to state 4
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_IF          shift, and go to state 6
    TOKEN_ELSE        shift, and go to state 7
    TOKEN_FOR         shift, and go to state 8
    TOKEN_WHILE       shift, and go to state 9
    TOKEN_FUNC_DEF    shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_LINEBREAK   shift, and go to state 12
    TOKEN_NUMBER      shift, and go to state 13

    program         go to state 14
    statement_list  go to state 15
    control         go to state 16
    statement       go to state 17
    expression      go to state 18


State 1

   29 expression: TOKEN_STRING •

    $default  reduce using rule 29 (expression)


State 2

   33 expression: TOKEN_NOT • expression

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 20


State 3

   25 statement: TOKEN_BREAK •

    $default  reduce using rule 25 (statement)


State 4

   19 statement: TOKEN_IDENTIFIER • TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN expression
   20          | TOKEN_IDENTIFIER • TOKEN_COLON TOKEN_TYPE
   21          | TOKEN_IDENTIFIER • TOKEN_ASSIGN expression
   30 expression: TOKEN_IDENTIFIER •
   32           | TOKEN_IDENTIFIER • TOKEN_LPAREN arguments TOKEN_RPAREN

    TOKEN_ASSIGN  shift, and go to state 21
    TOKEN_LPAREN  shift, and go to state 22
    TOKEN_COLON   shift, and go to state 23

    $default  reduce using rule 30 (expression)


State 5

   34 expression: TOKEN_LPAREN • expression TOKEN_RPAREN

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 24


State 6

    9 control: TOKEN_IF • expression TOKEN_COLON

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 25


State 7

   10 control: TOKEN_ELSE • TOKEN_COLON

    TOKEN_COLON  shift, and go to state 26


State 8

   11 control: TOKEN_FOR • TOKEN_IDENTIFIER TOKEN_IN expression TOKEN_COLON

    TOKEN_IDENTIFIER  shift, and go to state 27


State 9

   12 control: TOKEN_WHILE • expression TOKEN_COLON

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 28


State 10

   22 statement: TOKEN_FUNC_DEF • TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block
   23          | TOKEN_FUNC_DEF • TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_IDENTIFIER  shift, and go to state 29


State 11

   24 statement: TOKEN_RETURN • expression
   26          | TOKEN_RETURN •

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    $default  reduce using rule 26 (statement)

    expression  go to state 30


State 12

    5 statement_list: TOKEN_LINEBREAK • statement_list

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_BREAK       shift, and go to state 3
    TOKEN_IDENTIFIER  shift, and go to state 4
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_IF          shift, and go to state 6
    TOKEN_ELSE        shift, and go to state 7
    TOKEN_FOR         shift, and go to state 8
    TOKEN_WHILE       shift, and go to state 9
    TOKEN_FUNC_DEF    shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_LINEBREAK   shift, and go to state 12
    TOKEN_NUMBER      shift, and go to state 13

    statement_list  go to state 31
    control         go to state 16
    statement       go to state 17
    expression      go to state 18


State 13

   28 expression: TOKEN_NUMBER •

    $default  reduce using rule 28 (expression)


State 14

    0 $accept: program • $end

    $end  shift, and go to state 32


State 15

    1 program: statement_list •
    3 statement_list: statement_list • TOKEN_LINEBREAK statement
    4               | statement_list • TOKEN_LINEBREAK control block
    6               | statement_list • TOKEN_LINEBREAK

    TOKEN_LINEBREAK  shift, and go to state 33

    $default  reduce using rule 1 (program)


State 16

    8 statement_list: control • block

    TOKEN_INDENT  shift, and go to state 34

    block  go to state 35


State 17

    7 statement_list: statement •

    $default  reduce using rule 7 (statement_list)


State 18

   27 statement: expression •
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    $default  reduce using rule 27 (statement)

    operator  go to state 48


State 19

   30 expression: TOKEN_IDENTIFIER •
   32           | TOKEN_IDENTIFIER • TOKEN_LPAREN arguments TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 22

    $default  reduce using rule 30 (expression)


State 20

   31 expression: expression • operator expression
   33           | TOKEN_NOT expression •

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    TOKEN_AND            [reduce using rule 33 (expression)]
    TOKEN_OR             [reduce using rule 33 (expression)]
    TOKEN_COMPARE        [reduce using rule 33 (expression)]
    TOKEN_DIFFERENT      [reduce using rule 33 (expression)]
    TOKEN_GREATER        [reduce using rule 33 (expression)]
    TOKEN_LESS           [reduce using rule 33 (expression)]
    TOKEN_LESS_EQUAL     [reduce using rule 33 (expression)]
    TOKEN_GREATER_EQUAL  [reduce using rule 33 (expression)]
    TOKEN_PLUS           [reduce using rule 33 (expression)]
    TOKEN_MINUS          [reduce using rule 33 (expression)]
    TOKEN_MULTIPLY       [reduce using rule 33 (expression)]
    TOKEN_DIVIDE         [reduce using rule 33 (expression)]
    $default             reduce using rule 33 (expression)

    operator  go to state 48

    shift/reduce conflict on token TOKEN_COMPARE:
       33 expression: TOKEN_NOT expression •
       35 operator: • TOKEN_COMPARE
      Example: TOKEN_NOT expression • TOKEN_COMPARE expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator              expression
                                         ↳ 35: • TOKEN_COMPARE
      Reduce derivation
        expression
        ↳ 31: expression                   operator            expression
              ↳ 33: TOKEN_NOT expression • ↳ 35: TOKEN_COMPARE

    shift/reduce conflict on token TOKEN_DIFFERENT:
       33 expression: TOKEN_NOT expression •
       36 operator: • TOKEN_DIFFERENT
      Example: TOKEN_NOT expression • TOKEN_DIFFERENT expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator                expression
                                         ↳ 36: • TOKEN_DIFFERENT
      Reduce derivation
        expression
        ↳ 31: expression                   operator              expression
              ↳ 33: TOKEN_NOT expression • ↳ 36: TOKEN_DIFFERENT

    shift/reduce conflict on token TOKEN_LESS:
       33 expression: TOKEN_NOT expression •
       37 operator: • TOKEN_LESS
      Example: TOKEN_NOT expression • TOKEN_LESS expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator           expression
                                         ↳ 37: • TOKEN_LESS
      Reduce derivation
        expression
        ↳ 31: expression                   operator         expression
              ↳ 33: TOKEN_NOT expression • ↳ 37: TOKEN_LESS

    shift/reduce conflict on token TOKEN_GREATER:
       33 expression: TOKEN_NOT expression •
       38 operator: • TOKEN_GREATER
      Example: TOKEN_NOT expression • TOKEN_GREATER expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator              expression
                                         ↳ 38: • TOKEN_GREATER
      Reduce derivation
        expression
        ↳ 31: expression                   operator            expression
              ↳ 33: TOKEN_NOT expression • ↳ 38: TOKEN_GREATER

    shift/reduce conflict on token TOKEN_LESS_EQUAL:
       33 expression: TOKEN_NOT expression •
       39 operator: • TOKEN_LESS_EQUAL
      Example: TOKEN_NOT expression • TOKEN_LESS_EQUAL expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator                 expression
                                         ↳ 39: • TOKEN_LESS_EQUAL
      Reduce derivation
        expression
        ↳ 31: expression                   operator               expression
              ↳ 33: TOKEN_NOT expression • ↳ 39: TOKEN_LESS_EQUAL

    shift/reduce conflict on token TOKEN_GREATER_EQUAL:
       33 expression: TOKEN_NOT expression •
       40 operator: • TOKEN_GREATER_EQUAL
      Example: TOKEN_NOT expression • TOKEN_GREATER_EQUAL expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator                    expression
                                         ↳ 40: • TOKEN_GREATER_EQUAL
      Reduce derivation
        expression
        ↳ 31: expression                   operator                  expression
              ↳ 33: TOKEN_NOT expression • ↳ 40: TOKEN_GREATER_EQUAL

    shift/reduce conflict on token TOKEN_AND:
       33 expression: TOKEN_NOT expression •
       41 operator: • TOKEN_AND
      Example: TOKEN_NOT expression • TOKEN_AND expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator          expression
                                         ↳ 41: • TOKEN_AND
      Reduce derivation
        expression
        ↳ 31: expression                   operator        expression
              ↳ 33: TOKEN_NOT expression • ↳ 41: TOKEN_AND

    shift/reduce conflict on token TOKEN_OR:
       33 expression: TOKEN_NOT expression •
       42 operator: • TOKEN_OR
      Example: TOKEN_NOT expression • TOKEN_OR expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator         expression
                                         ↳ 42: • TOKEN_OR
      Reduce derivation
        expression
        ↳ 31: expression                   operator       expression
              ↳ 33: TOKEN_NOT expression • ↳ 42: TOKEN_OR

    shift/reduce conflict on token TOKEN_PLUS:
       33 expression: TOKEN_NOT expression •
       43 operator: • TOKEN_PLUS
      Example: TOKEN_NOT expression • TOKEN_PLUS expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator           expression
                                         ↳ 43: • TOKEN_PLUS
      Reduce derivation
        expression
        ↳ 31: expression                   operator         expression
              ↳ 33: TOKEN_NOT expression • ↳ 43: TOKEN_PLUS

    shift/reduce conflict on token TOKEN_MINUS:
       33 expression: TOKEN_NOT expression •
       44 operator: • TOKEN_MINUS
      Example: TOKEN_NOT expression • TOKEN_MINUS expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator            expression
                                         ↳ 44: • TOKEN_MINUS
      Reduce derivation
        expression
        ↳ 31: expression                   operator          expression
              ↳ 33: TOKEN_NOT expression • ↳ 44: TOKEN_MINUS

    shift/reduce conflict on token TOKEN_MULTIPLY:
       33 expression: TOKEN_NOT expression •
       45 operator: • TOKEN_MULTIPLY
      Example: TOKEN_NOT expression • TOKEN_MULTIPLY expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator               expression
                                         ↳ 45: • TOKEN_MULTIPLY
      Reduce derivation
        expression
        ↳ 31: expression                   operator             expression
              ↳ 33: TOKEN_NOT expression • ↳ 45: TOKEN_MULTIPLY

    shift/reduce conflict on token TOKEN_DIVIDE:
       33 expression: TOKEN_NOT expression •
       46 operator: • TOKEN_DIVIDE
      Example: TOKEN_NOT expression • TOKEN_DIVIDE expression
      Shift derivation
        expression
        ↳ 33: TOKEN_NOT expression
                        ↳ 31: expression operator             expression
                                         ↳ 46: • TOKEN_DIVIDE
      Reduce derivation
        expression
        ↳ 31: expression                   operator           expression
              ↳ 33: TOKEN_NOT expression • ↳ 46: TOKEN_DIVIDE



State 21

   21 statement: TOKEN_IDENTIFIER TOKEN_ASSIGN • expression

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 49


State 22

   32 expression: TOKEN_IDENTIFIER TOKEN_LPAREN • arguments TOKEN_RPAREN

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    arguments   go to state 50
    expression  go to state 51


State 23

   19 statement: TOKEN_IDENTIFIER TOKEN_COLON • TOKEN_TYPE TOKEN_ASSIGN expression
   20          | TOKEN_IDENTIFIER TOKEN_COLON • TOKEN_TYPE

    TOKEN_TYPE  shift, and go to state 52


State 24

   31 expression: expression • operator expression
   34           | TOKEN_LPAREN expression • TOKEN_RPAREN

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_RPAREN         shift, and go to state 53
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    operator  go to state 48


State 25

    9 control: TOKEN_IF expression • TOKEN_COLON
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47
    TOKEN_COLON          shift, and go to state 54

    operator  go to state 48


State 26

   10 control: TOKEN_ELSE TOKEN_COLON •

    $default  reduce using rule 10 (control)


State 27

   11 control: TOKEN_FOR TOKEN_IDENTIFIER • TOKEN_IN expression TOKEN_COLON

    TOKEN_IN  shift, and go to state 55


State 28

   12 control: TOKEN_WHILE expression • TOKEN_COLON
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47
    TOKEN_COLON          shift, and go to state 56

    operator  go to state 48


State 29

   22 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER • TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block
   23          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER • TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_LPAREN  shift, and go to state 57


State 30

   24 statement: TOKEN_RETURN expression •
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    $default  reduce using rule 24 (statement)

    operator  go to state 48


State 31

    3 statement_list: statement_list • TOKEN_LINEBREAK statement
    4               | statement_list • TOKEN_LINEBREAK control block
    5               | TOKEN_LINEBREAK statement_list •
    6               | statement_list • TOKEN_LINEBREAK

    TOKEN_LINEBREAK  shift, and go to state 33

    TOKEN_LINEBREAK  [reduce using rule 5 (statement_list)]
    $default         reduce using rule 5 (statement_list)

    shift/reduce conflict on token TOKEN_LINEBREAK:
        5 statement_list: TOKEN_LINEBREAK statement_list •
        3 statement_list: statement_list • TOKEN_LINEBREAK statement
      Example: TOKEN_LINEBREAK statement_list • TOKEN_LINEBREAK statement
      Shift derivation
        statement_list
        ↳ 5: TOKEN_LINEBREAK statement_list
                             ↳ 3: statement_list • TOKEN_LINEBREAK statement
      Reduce derivation
        statement_list
        ↳ 3: statement_list                        TOKEN_LINEBREAK statement
             ↳ 5: TOKEN_LINEBREAK statement_list •

    shift/reduce conflict on token TOKEN_LINEBREAK:
        5 statement_list: TOKEN_LINEBREAK statement_list •
        4 statement_list: statement_list • TOKEN_LINEBREAK control block
      Example: TOKEN_LINEBREAK statement_list • TOKEN_LINEBREAK control block
      Shift derivation
        statement_list
        ↳ 5: TOKEN_LINEBREAK statement_list
                             ↳ 4: statement_list • TOKEN_LINEBREAK control block
      Reduce derivation
        statement_list
        ↳ 4: statement_list                        TOKEN_LINEBREAK control block
             ↳ 5: TOKEN_LINEBREAK statement_list •

    shift/reduce conflict on token TOKEN_LINEBREAK:
        5 statement_list: TOKEN_LINEBREAK statement_list •
        6 statement_list: statement_list • TOKEN_LINEBREAK
      Example: TOKEN_LINEBREAK statement_list • TOKEN_LINEBREAK
      Shift derivation
        statement_list
        ↳ 5: TOKEN_LINEBREAK statement_list
                             ↳ 6: statement_list • TOKEN_LINEBREAK
      Reduce derivation
        statement_list
        ↳ 6: statement_list                        TOKEN_LINEBREAK
             ↳ 5: TOKEN_LINEBREAK statement_list •



State 32

    0 $accept: program $end •

    $default  accept


State 33

    3 statement_list: statement_list TOKEN_LINEBREAK • statement
    4               | statement_list TOKEN_LINEBREAK • control block
    6               | statement_list TOKEN_LINEBREAK •

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_BREAK       shift, and go to state 3
    TOKEN_IDENTIFIER  shift, and go to state 4
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_IF          shift, and go to state 6
    TOKEN_ELSE        shift, and go to state 7
    TOKEN_FOR         shift, and go to state 8
    TOKEN_WHILE       shift, and go to state 9
    TOKEN_FUNC_DEF    shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_NUMBER      shift, and go to state 13

    $default  reduce using rule 6 (statement_list)

    control     go to state 58
    statement   go to state 59
    expression  go to state 18


State 34

    2 block: TOKEN_INDENT • statement_list TOKEN_DEDENT

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_BREAK       shift, and go to state 3
    TOKEN_IDENTIFIER  shift, and go to state 4
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_IF          shift, and go to state 6
    TOKEN_ELSE        shift, and go to state 7
    TOKEN_FOR         shift, and go to state 8
    TOKEN_WHILE       shift, and go to state 9
    TOKEN_FUNC_DEF    shift, and go to state 10
    TOKEN_RETURN      shift, and go to state 11
    TOKEN_LINEBREAK   shift, and go to state 12
    TOKEN_NUMBER      shift, and go to state 13

    statement_list  go to state 60
    control         go to state 16
    statement       go to state 17
    expression      go to state 18


State 35

    8 statement_list: control block •

    $default  reduce using rule 8 (statement_list)


State 36

   41 operator: TOKEN_AND •

    $default  reduce using rule 41 (operator)


State 37

   42 operator: TOKEN_OR •

    $default  reduce using rule 42 (operator)


State 38

   35 operator: TOKEN_COMPARE •

    $default  reduce using rule 35 (operator)


State 39

   36 operator: TOKEN_DIFFERENT •

    $default  reduce using rule 36 (operator)


State 40

   38 operator: TOKEN_GREATER •

    $default  reduce using rule 38 (operator)


State 41

   37 operator: TOKEN_LESS •

    $default  reduce using rule 37 (operator)


State 42

   39 operator: TOKEN_LESS_EQUAL •

    $default  reduce using rule 39 (operator)


State 43

   40 operator: TOKEN_GREATER_EQUAL •

    $default  reduce using rule 40 (operator)


State 44

   43 operator: TOKEN_PLUS •

    $default  reduce using rule 43 (operator)


State 45

   44 operator: TOKEN_MINUS •

    $default  reduce using rule 44 (operator)


State 46

   45 operator: TOKEN_MULTIPLY •

    $default  reduce using rule 45 (operator)


State 47

   46 operator: TOKEN_DIVIDE •

    $default  reduce using rule 46 (operator)


State 48

   31 expression: expression operator • expression

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 61


State 49

   21 statement: TOKEN_IDENTIFIER TOKEN_ASSIGN expression •
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    $default  reduce using rule 21 (statement)

    operator  go to state 48


State 50

   17 arguments: arguments • TOKEN_COMMA expression
   32 expression: TOKEN_IDENTIFIER TOKEN_LPAREN arguments • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 62
    TOKEN_COMMA   shift, and go to state 63


State 51

   18 arguments: expression •
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    $default  reduce using rule 18 (arguments)

    operator  go to state 48


State 52

   19 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE • TOKEN_ASSIGN expression
   20          | TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE •

    TOKEN_ASSIGN  shift, and go to state 64

    $default  reduce using rule 20 (statement)


State 53

   34 expression: TOKEN_LPAREN expression TOKEN_RPAREN •

    $default  reduce using rule 34 (expression)


State 54

    9 control: TOKEN_IF expression TOKEN_COLON •

    $default  reduce using rule 9 (control)


State 55

   11 control: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN • expression TOKEN_COLON

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 65


State 56

   12 control: TOKEN_WHILE expression TOKEN_COLON •

    $default  reduce using rule 12 (control)


State 57

   22 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN • parameters TOKEN_RPAREN TOKEN_COLON block
   23          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN • parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_IDENTIFIER  shift, and go to state 66

    parameters  go to state 67
    parameter   go to state 68


State 58

    4 statement_list: statement_list TOKEN_LINEBREAK control • block

    TOKEN_INDENT  shift, and go to state 34

    block  go to state 69


State 59

    3 statement_list: statement_list TOKEN_LINEBREAK statement •

    $default  reduce using rule 3 (statement_list)


State 60

    2 block: TOKEN_INDENT statement_list • TOKEN_DEDENT
    3 statement_list: statement_list • TOKEN_LINEBREAK statement
    4               | statement_list • TOKEN_LINEBREAK control block
    6               | statement_list • TOKEN_LINEBREAK

    TOKEN_LINEBREAK  shift, and go to state 33
    TOKEN_DEDENT     shift, and go to state 70


State 61

   31 expression: expression • operator expression
   31           | expression operator expression •

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    TOKEN_AND            [reduce using rule 31 (expression)]
    TOKEN_OR             [reduce using rule 31 (expression)]
    TOKEN_COMPARE        [reduce using rule 31 (expression)]
    TOKEN_DIFFERENT      [reduce using rule 31 (expression)]
    TOKEN_GREATER        [reduce using rule 31 (expression)]
    TOKEN_LESS           [reduce using rule 31 (expression)]
    TOKEN_LESS_EQUAL     [reduce using rule 31 (expression)]
    TOKEN_GREATER_EQUAL  [reduce using rule 31 (expression)]
    TOKEN_PLUS           [reduce using rule 31 (expression)]
    TOKEN_MINUS          [reduce using rule 31 (expression)]
    TOKEN_MULTIPLY       [reduce using rule 31 (expression)]
    TOKEN_DIVIDE         [reduce using rule 31 (expression)]
    $default             reduce using rule 31 (expression)

    operator  go to state 48

    shift/reduce conflict on token TOKEN_COMPARE:
       31 expression: expression operator expression •
       35 operator: • TOKEN_COMPARE
      Example: expression operator expression • TOKEN_COMPARE expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator              expression
                                                   ↳ 35: • TOKEN_COMPARE
      Reduce derivation
        expression
        ↳ 31: expression                             operator            expression
              ↳ 31: expression operator expression • ↳ 35: TOKEN_COMPARE

    shift/reduce conflict on token TOKEN_DIFFERENT:
       31 expression: expression operator expression •
       36 operator: • TOKEN_DIFFERENT
      Example: expression operator expression • TOKEN_DIFFERENT expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator                expression
                                                   ↳ 36: • TOKEN_DIFFERENT
      Reduce derivation
        expression
        ↳ 31: expression                             operator              expression
              ↳ 31: expression operator expression • ↳ 36: TOKEN_DIFFERENT

    shift/reduce conflict on token TOKEN_LESS:
       31 expression: expression operator expression •
       37 operator: • TOKEN_LESS
      Example: expression operator expression • TOKEN_LESS expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator           expression
                                                   ↳ 37: • TOKEN_LESS
      Reduce derivation
        expression
        ↳ 31: expression                             operator         expression
              ↳ 31: expression operator expression • ↳ 37: TOKEN_LESS

    shift/reduce conflict on token TOKEN_GREATER:
       31 expression: expression operator expression •
       38 operator: • TOKEN_GREATER
      Example: expression operator expression • TOKEN_GREATER expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator              expression
                                                   ↳ 38: • TOKEN_GREATER
      Reduce derivation
        expression
        ↳ 31: expression                             operator            expression
              ↳ 31: expression operator expression • ↳ 38: TOKEN_GREATER

    shift/reduce conflict on token TOKEN_LESS_EQUAL:
       31 expression: expression operator expression •
       39 operator: • TOKEN_LESS_EQUAL
      Example: expression operator expression • TOKEN_LESS_EQUAL expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator                 expression
                                                   ↳ 39: • TOKEN_LESS_EQUAL
      Reduce derivation
        expression
        ↳ 31: expression                             operator               expression
              ↳ 31: expression operator expression • ↳ 39: TOKEN_LESS_EQUAL

    shift/reduce conflict on token TOKEN_GREATER_EQUAL:
       31 expression: expression operator expression •
       40 operator: • TOKEN_GREATER_EQUAL
      Example: expression operator expression • TOKEN_GREATER_EQUAL expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator                    expression
                                                   ↳ 40: • TOKEN_GREATER_EQUAL
      Reduce derivation
        expression
        ↳ 31: expression                             operator                  expression
              ↳ 31: expression operator expression • ↳ 40: TOKEN_GREATER_EQUAL

    shift/reduce conflict on token TOKEN_AND:
       31 expression: expression operator expression •
       41 operator: • TOKEN_AND
      Example: expression operator expression • TOKEN_AND expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator          expression
                                                   ↳ 41: • TOKEN_AND
      Reduce derivation
        expression
        ↳ 31: expression                             operator        expression
              ↳ 31: expression operator expression • ↳ 41: TOKEN_AND

    shift/reduce conflict on token TOKEN_OR:
       31 expression: expression operator expression •
       42 operator: • TOKEN_OR
      Example: expression operator expression • TOKEN_OR expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator         expression
                                                   ↳ 42: • TOKEN_OR
      Reduce derivation
        expression
        ↳ 31: expression                             operator       expression
              ↳ 31: expression operator expression • ↳ 42: TOKEN_OR

    shift/reduce conflict on token TOKEN_PLUS:
       31 expression: expression operator expression •
       43 operator: • TOKEN_PLUS
      Example: expression operator expression • TOKEN_PLUS expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator           expression
                                                   ↳ 43: • TOKEN_PLUS
      Reduce derivation
        expression
        ↳ 31: expression                             operator         expression
              ↳ 31: expression operator expression • ↳ 43: TOKEN_PLUS

    shift/reduce conflict on token TOKEN_MINUS:
       31 expression: expression operator expression •
       44 operator: • TOKEN_MINUS
      Example: expression operator expression • TOKEN_MINUS expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator            expression
                                                   ↳ 44: • TOKEN_MINUS
      Reduce derivation
        expression
        ↳ 31: expression                             operator          expression
              ↳ 31: expression operator expression • ↳ 44: TOKEN_MINUS

    shift/reduce conflict on token TOKEN_MULTIPLY:
       31 expression: expression operator expression •
       45 operator: • TOKEN_MULTIPLY
      Example: expression operator expression • TOKEN_MULTIPLY expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator               expression
                                                   ↳ 45: • TOKEN_MULTIPLY
      Reduce derivation
        expression
        ↳ 31: expression                             operator             expression
              ↳ 31: expression operator expression • ↳ 45: TOKEN_MULTIPLY

    shift/reduce conflict on token TOKEN_DIVIDE:
       31 expression: expression operator expression •
       46 operator: • TOKEN_DIVIDE
      Example: expression operator expression • TOKEN_DIVIDE expression
      Shift derivation
        expression
        ↳ 31: expression operator expression
                                  ↳ 31: expression operator             expression
                                                   ↳ 46: • TOKEN_DIVIDE
      Reduce derivation
        expression
        ↳ 31: expression                             operator           expression
              ↳ 31: expression operator expression • ↳ 46: TOKEN_DIVIDE



State 62

   32 expression: TOKEN_IDENTIFIER TOKEN_LPAREN arguments TOKEN_RPAREN •

    $default  reduce using rule 32 (expression)


State 63

   17 arguments: arguments TOKEN_COMMA • expression

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 71


State 64

   19 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN • expression

    TOKEN_STRING      shift, and go to state 1
    TOKEN_NOT         shift, and go to state 2
    TOKEN_IDENTIFIER  shift, and go to state 19
    TOKEN_LPAREN      shift, and go to state 5
    TOKEN_NUMBER      shift, and go to state 13

    expression  go to state 72


State 65

   11 control: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN expression • TOKEN_COLON
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47
    TOKEN_COLON          shift, and go to state 73

    operator  go to state 48


State 66

   15 parameter: TOKEN_IDENTIFIER • TOKEN_COLON TOKEN_TYPE
   16          | TOKEN_IDENTIFIER •

    TOKEN_COLON  shift, and go to state 74

    $default  reduce using rule 16 (parameter)


State 67

   13 parameters: parameters • TOKEN_COMMA parameter
   22 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters • TOKEN_RPAREN TOKEN_COLON block
   23          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters • TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_RPAREN  shift, and go to state 75
    TOKEN_COMMA   shift, and go to state 76


State 68

   14 parameters: parameter •

    $default  reduce using rule 14 (parameters)


State 69

    4 statement_list: statement_list TOKEN_LINEBREAK control block •

    $default  reduce using rule 4 (statement_list)


State 70

    2 block: TOKEN_INDENT statement_list TOKEN_DEDENT •

    $default  reduce using rule 2 (block)


State 71

   17 arguments: arguments TOKEN_COMMA expression •
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    $default  reduce using rule 17 (arguments)

    operator  go to state 48


State 72

   19 statement: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE TOKEN_ASSIGN expression •
   31 expression: expression • operator expression

    TOKEN_AND            shift, and go to state 36
    TOKEN_OR             shift, and go to state 37
    TOKEN_COMPARE        shift, and go to state 38
    TOKEN_DIFFERENT      shift, and go to state 39
    TOKEN_GREATER        shift, and go to state 40
    TOKEN_LESS           shift, and go to state 41
    TOKEN_LESS_EQUAL     shift, and go to state 42
    TOKEN_GREATER_EQUAL  shift, and go to state 43
    TOKEN_PLUS           shift, and go to state 44
    TOKEN_MINUS          shift, and go to state 45
    TOKEN_MULTIPLY       shift, and go to state 46
    TOKEN_DIVIDE         shift, and go to state 47

    $default  reduce using rule 19 (statement)

    operator  go to state 48


State 73

   11 control: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_IN expression TOKEN_COLON •

    $default  reduce using rule 11 (control)


State 74

   15 parameter: TOKEN_IDENTIFIER TOKEN_COLON • TOKEN_TYPE

    TOKEN_TYPE  shift, and go to state 77


State 75

   22 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN • TOKEN_COLON block
   23          | TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN • TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block

    TOKEN_ARROW  shift, and go to state 78
    TOKEN_COLON  shift, and go to state 79


State 76

   13 parameters: parameters TOKEN_COMMA • parameter

    TOKEN_IDENTIFIER  shift, and go to state 66

    parameter  go to state 80


State 77

   15 parameter: TOKEN_IDENTIFIER TOKEN_COLON TOKEN_TYPE •

    $default  reduce using rule 15 (parameter)


State 78

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW • TOKEN_TYPE TOKEN_COLON block

    TOKEN_TYPE  shift, and go to state 81


State 79

   22 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON • block

    TOKEN_INDENT  shift, and go to state 34

    block  go to state 82


State 80

   13 parameters: parameters TOKEN_COMMA parameter •

    $default  reduce using rule 13 (parameters)


State 81

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE • TOKEN_COLON block

    TOKEN_COLON  shift, and go to state 83


State 82

   22 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_COLON block •

    $default  reduce using rule 22 (statement)


State 83

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON • block

    TOKEN_INDENT  shift, and go to state 34

    block  go to state 84


State 84

   23 statement: TOKEN_FUNC_DEF TOKEN_IDENTIFIER TOKEN_LPAREN parameters TOKEN_RPAREN TOKEN_ARROW TOKEN_TYPE TOKEN_COLON block •

    $default  reduce using rule 23 (statement)
